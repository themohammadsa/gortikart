{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dashi\\\\Documents\\\\GitHub\\\\gortikart\\\\src\\\\components\\\\categorise\\\\desktop\\\\CategoriseDesktop.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport \"./categorise-desktop.css\";\nimport { useProductContext } from \"../../../context/ProductContext\";\nimport { useHomeContext } from \"../../../context/HomeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var CategoriseDesktop = function CategoriseDesktop() {\n  _s();\n\n  var _useProductContext = useProductContext(),\n      payloadParse = _useProductContext.payloadParse;\n\n  var _useHomeContext = useHomeContext(),\n      state = _useHomeContext.state,\n      dispatch = _useHomeContext.dispatch;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categorise flex-column align-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"pointer\",\n        onClick: function onClick() {\n          return dispatch({\n            type: \"CLEAR_ALL\"\n          });\n        },\n        children: [\" \", \"CLEAR ALL\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categorise-block flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"SORT BY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, _this), state.sortCategories.map(function (item) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"categorise-sort-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"sort\",\n                checked: state.sortBy.includes(payloadParse(item)),\n                onChange: function onChange() {\n                  return dispatch({\n                    type: \"SORT_BY\",\n                    payload: payloadParse(item)\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 19\n              }, _this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", item, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"FILTERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this), Object.keys(state.filterCategories).map(function (key) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"categorise-filter\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\" \", key.toUpperCase(), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, _this), state.filterCategories[key].map(function (item) {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"categorise-filter-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      name: \"checkbox\",\n                      checked: (state === null || state === void 0 ? void 0 : state[payloadParse(item)]) ? state[payloadParse(item)] : state.filterBy.includes(payloadParse(item)),\n                      onChange: function onChange(e) {\n                        dispatch({\n                          type: \"FILTER_BY\",\n                          key: payloadParse(key),\n                          action: {\n                            payload: payloadParse(item)\n                          }\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 51,\n                      columnNumber: 27\n                    }, _this), item]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CategoriseDesktop, \"OPX9x1w1Nkb47I2QOYMsGDPI8hs=\", false, function () {\n  return [useProductContext, useHomeContext];\n});\n\n_c = CategoriseDesktop;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoriseDesktop\");","map":{"version":3,"sources":["C:/Users/dashi/Documents/GitHub/gortikart/src/components/categorise/desktop/CategoriseDesktop.js"],"names":["useProductContext","useHomeContext","CategoriseDesktop","payloadParse","state","dispatch","type","sortCategories","map","item","sortBy","includes","payload","Object","keys","filterCategories","key","toUpperCase","filterBy","e","action"],"mappings":"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","sourcesContent":["import \"./categorise-desktop.css\";\r\nimport { useProductContext } from \"../../../context/ProductContext\";\r\nimport { useHomeContext } from \"../../../context/HomeContext\";\r\n\r\nexport const CategoriseDesktop = () => {\r\n  const { payloadParse } = useProductContext();\r\n  const { state, dispatch } = useHomeContext();\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"categorise flex-column align-center\">\r\n        <h3 className=\"pointer\" onClick={() => dispatch({ type: \"CLEAR_ALL\" })}>\r\n          {\" \"}\r\n          CLEAR ALL{\" \"}\r\n        </h3>\r\n        <div className=\"categorise-block flex-column\">\r\n          <h3>SORT BY</h3>\r\n          {state.sortCategories.map((item) => {\r\n            return (\r\n              <>\r\n                <label className=\"categorise-sort-label\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"sort\"\r\n                    checked={state.sortBy.includes(payloadParse(item))}\r\n                    onChange={() =>\r\n                      dispatch({\r\n                        type: \"SORT_BY\",\r\n                        payload: payloadParse(item)\r\n                      })\r\n                    }\r\n                  ></input>{\" \"}\r\n                  <span> {item} </span>\r\n                </label>\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n        <hr />\r\n        <div className=\"flex-column\">\r\n          <h3>FILTERS</h3>\r\n          {Object.keys(state.filterCategories).map((key) => {\r\n            return (\r\n              <>\r\n                <li className=\"categorise-filter\">\r\n                  <h5> {key.toUpperCase()} </h5>\r\n                  {state.filterCategories[key].map((item) => {\r\n                    return (\r\n                      <>\r\n                        <label className=\"categorise-filter-label\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name=\"checkbox\"\r\n                            checked={\r\n                              state?.[payloadParse(item)]\r\n                                ? state[payloadParse(item)]\r\n                                : state.filterBy.includes(payloadParse(item))\r\n                            }\r\n                            onChange={(e) => {\r\n                              dispatch({\r\n                                type: \"FILTER_BY\",\r\n                                key: payloadParse(key),\r\n                                action: {\r\n                                  payload: payloadParse(item)\r\n                                }\r\n                              });\r\n                            }}\r\n                          ></input>\r\n\r\n                          {item}\r\n                        </label>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </li>\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}