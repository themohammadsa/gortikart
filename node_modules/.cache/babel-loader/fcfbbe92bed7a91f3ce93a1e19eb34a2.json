{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/dashi/Documents/GitHub/gortikart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/dashi/Documents/GitHub/gortikart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { errorHandler } from './errorHandler';\nvar API_URL = 'https://gortikart.themohammadsa.repl.co/user/address';\nexport var addAddress = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var address, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            address = _ref.address;\n            _context.prev = 1;\n            _context.next = 4;\n            return axios.post(\"\".concat(API_URL, \"/add\"), {\n              address: address\n            });\n\n          case 4:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", errorHandler(_context.t0));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n\n  return function addAddress(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getAddress = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3) {\n    var address, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            address = _ref3.address;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return axios.post(\"\".concat(API_URL, \"/address/get\"), {\n              address: address\n            });\n\n          case 4:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data);\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            return _context2.abrupt(\"return\", errorHandler(_context2.t0));\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 8]]);\n  }));\n\n  return function getAddress(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/dashi/Documents/GitHub/gortikart/src/services/address.js"],"names":["axios","errorHandler","API_URL","addAddress","address","post","response","data","getAddress"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,IAAMC,OAAO,GAAG,sDAAhB;AAEA,OAAO,IAAMC,UAAU;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,OAAT,QAASA,OAAT;AAAA;AAAA;AAAA,mBAECJ,KAAK,CAACK,IAAN,WAAcH,OAAd,WAA6B;AAClDE,cAAAA,OAAO,EAAPA;AADkD,aAA7B,CAFD;;AAAA;AAEhBE,YAAAA,QAFgB;AAAA,6CAKfA,QAAQ,CAACC,IALM;;AAAA;AAAA;AAAA;AAAA,6CAOfN,YAAY,aAPG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVE,UAAU;AAAA;AAAA;AAAA,GAAhB;AAWP,OAAO,IAAMK,UAAU;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAASJ,YAAAA,OAAT,SAASA,OAAT;AAAA;AAAA;AAAA,mBAECJ,KAAK,CAACK,IAAN,WAAcH,OAAd,mBAAqC;AAC1DE,cAAAA,OAAO,EAAPA;AAD0D,aAArC,CAFD;;AAAA;AAEhBE,YAAAA,QAFgB;AAAA,8CAKfA,QAAQ,CAACC,IALM;;AAAA;AAAA;AAAA;AAAA,8CAOfN,YAAY,cAPG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVO,UAAU;AAAA;AAAA;AAAA,GAAhB","sourcesContent":["import axios from 'axios';\r\nimport { errorHandler } from './errorHandler';\r\n\r\nconst API_URL = 'https://gortikart.themohammadsa.repl.co/user/address';\r\n\r\nexport const addAddress = async ({ address }) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/add`, {\r\n      address,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    return errorHandler(error);\r\n  }\r\n};\r\n\r\nexport const getAddress = async ({ address }) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/address/get`, {\r\n      address,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    return errorHandler(error);\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}