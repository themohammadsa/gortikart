{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/dashi/Documents/GitHub/gortikart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/dashi/Documents/GitHub/gortikart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/dashi/Documents/GitHub/gortikart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dashi\\\\Documents\\\\GitHub\\\\gortikart\\\\src\\\\pages\\\\address\\\\CheckOutAddress.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './address.css';\nimport { AddAddress } from '../../components/address/AddAddress';\nimport { getAddress } from '../../services/address';\nimport { AddressCard } from '../../components/address/AddressCard';\nimport { useProductContext } from '../../context/ProductContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var CheckOutAddress = function CheckOutAddress() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      addresses = _useState2[0],\n      setAddresses = _useState2[1];\n\n  var _useProductContext = useProductContext(),\n      setToastText = _useProductContext.setToastText,\n      setToastShow = _useProductContext.setToastShow;\n\n  var clickHandler = function clickHandler() {\n    setToastShow(true);\n    setToastText(\"Order has been placed\");\n  };\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getAddress();\n\n          case 2:\n            response = _context.sent;\n            setAddresses(response.address);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"address-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select your address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-address-button\",\n      children: \"Add new address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: addresses && addresses.map(function (address) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"card-button\",\n            onClick: clickHandler,\n            children: /*#__PURE__*/_jsxDEV(AddressCard, {\n              address: address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CheckOutAddress, \"cG+oF5RNumGdcEKtQMFIySXQbTA=\", false, function () {\n  return [useProductContext];\n});\n\n_c = CheckOutAddress;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckOutAddress\");","map":{"version":3,"sources":["C:/Users/dashi/Documents/GitHub/gortikart/src/pages/address/CheckOutAddress.js"],"names":["useEffect","useState","AddAddress","getAddress","AddressCard","useProductContext","CheckOutAddress","addresses","setAddresses","setToastText","setToastShow","clickHandler","response","address","map"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,eAAP;AACA,SAASC,UAAT,QAA2B,qCAA3B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;;;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AACnC,kBAAkCL,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOM,SAAP;AAAA,MAAkBC,YAAlB;;AACA,2BAAuCH,iBAAiB,EAAxD;AAAA,MAAQI,YAAR,sBAAQA,YAAR;AAAA,MAAsBC,YAAtB,sBAAsBA,YAAtB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAD,IAAAA,YAAY,CAAC,uBAAD,CAAZ;AACD,GAHD;;AAKAT,EAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeG,UAAU,EADzB;;AAAA;AACFS,YAAAA,QADE;AAERJ,YAAAA,YAAY,CAACI,QAAQ,CAACC,OAAV,CAAZ;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAGE;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,eAKE;AAAA,gBACGN,SAAS,IACRA,SAAS,CAACO,GAAV,CAAc,UAACD,OAAD,EAAa;AACzB,4BACE;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,aAAlB;AAAgC,YAAA,OAAO,EAAEF,YAAzC;AAAA,mCACE,QAAC,WAAD;AAAa,cAAA,OAAO,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,yBADF;AAOD,OARD;AAFJ;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAoBD,CAlCM;;GAAMP,e;UAE4BD,iB;;;KAF5BC,e","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './address.css';\r\nimport { AddAddress } from '../../components/address/AddAddress';\r\nimport { getAddress } from '../../services/address';\r\nimport { AddressCard } from '../../components/address/AddressCard';\r\nimport { useProductContext } from '../../context/ProductContext';\r\n\r\nexport const CheckOutAddress = () => {\r\n  const [addresses, setAddresses] = useState([]);\r\n  const { setToastText, setToastShow } = useProductContext();\r\n\r\n  const clickHandler = () => {\r\n    setToastShow(true)\r\n    setToastText(\"Order has been placed\")\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const response = await getAddress();\r\n    setAddresses(response.address);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"address-page\">\r\n      <h1>Select your address</h1>\r\n\r\n      <button className=\"add-address-button\">Add new address</button>\r\n\r\n      <div>\r\n        {addresses &&\r\n          addresses.map((address) => {\r\n            return (\r\n              <>\r\n                <button className=\"card-button\" onClick={clickHandler}>\r\n                  <AddressCard address={address} />\r\n                </button>\r\n              </>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}